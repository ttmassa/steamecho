<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:SteamEcho.App.Converters"
>
    <converters:AchievementRarityConverter x:Key="RarityConverter"/>

    <!-- Style for Button -->
    <Style TargetType="Button">
        <Setter Property="Foreground" Value="#F0F0F0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="4" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.8" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for Button -->
    <Style TargetType="Button" x:Key="NoHoverButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for Slider -->
    <Style TargetType="Slider">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="0,0,5,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid VerticalAlignment="Center">
                        <Border x:Name="TrackBackground" Height="3" CornerRadius="1.5" Background="#4A4A4D"/>
                        <Track x:Name="PART_Track">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Width="14" Height="14">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Ellipse x:Name="grip" Fill="#F0F0F0" StrokeThickness="0"/>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="grip" Property="Fill" Value="#E63946"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for ListBoxItem -->
    <Style TargetType="ListBoxItem" x:Key="CustomListBoxItemStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#4A4A4D"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#4A4A4D"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Style for ScrollBar -->
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Background="{TemplateBinding Background}">
                        <Track x:Name="PART_Track" IsDirectionReversed="true" Focusable="false">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" Visibility="Collapsed" IsTabStop="False"/>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Cursor="Hand">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                            <Border x:Name="ThumbBorder" Background="#F0F0F0" CornerRadius="4" Margin="0,4"/>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" Visibility="Collapsed" IsTabStop="False"/>
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="GridRoot" Property="Width" Value="8"/>
                            <Setter TargetName="PART_Track" Property="Width" Value="8"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="Height" Value="8"/>
                            <Setter TargetName="PART_Track" Property="Height" Value="8"/>
                            <Setter TargetName="PART_Track" Property="IsDirectionReversed" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for ProgressBar -->
    <Style TargetType="ProgressBar">
        <Setter Property="Height" Value="8"/>
        <Setter Property="Background" Value="#4A4A4D"/>
        <Setter Property="Foreground" Value="#B42A35"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid x:Name="TemplateRoot">
                        <Border x:Name="PART_Track" CornerRadius="4" Background="{TemplateBinding Background}"/>
                        <Border x:Name="PART_Indicator" CornerRadius="4" Background="{TemplateBinding Foreground}" HorizontalAlignment="Left"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for TextBlock -->
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="/Assets/Fonts/#Alexandria"/>
        <Setter Property="Foreground" Value="#F0F0F0"/>
    </Style>

    <!-- Style for Control -->
    <Style TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="/Assets/Fonts/#Alexandria"/>
    </Style>

    <!-- Style for ToolTip -->
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="FontFamily" Value="/Assets/Fonts/#Alexandria"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Foreground" Value="#4A4A4D"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" Foreground="{Binding RelativeSource={RelativeSource AncestorType=ToolTip}, Path=Foreground}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for TextBox -->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="/Assets/Fonts/#Alexandria"/>
        <Setter Property="Foreground" Value="#F0F0F0"/>
        <Setter Property="FontWeight" Value="Light"/>
    </Style>

    <!-- Style for MenuItem -->
    <Style x:Key="CustomMenuItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" Foreground="#4A4A4D" FontWeight="Light"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="#4A4A4D"/>
                <Setter Property="Foreground" Value="#F0F0F0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Style for Language ComboBox -->
    <!-- Closed (selected) template -->
    <DataTemplate x:Key="LanguageSelectedTemplate">
        <Image Source="{Binding FlagPath}" Width="22" Height="22" Stretch="Uniform"/>
    </DataTemplate>
    <Style TargetType="ComboBox">
        <Setter Property="Background" Value="#2B2B2C"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="MaxDropDownHeight" Value="240"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <!-- Clickable header -->
                        <ToggleButton x:Name="ToggleButton" Grid.ZIndex="1" Focusable="False" Background="Transparent" BorderThickness="0" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" FocusVisualStyle="{x:Null}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border x:Name="HeaderBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                                        <Grid>
                                            <!-- Selected item: flag only -->
                                            <ContentPresenter x:Name="SelectedFlag" Margin="8,0,28,0" VerticalAlignment="Center" HorizontalAlignment="Left" Content="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=ComboBox}}" ContentTemplate="{StaticResource LanguageSelectedTemplate}"/>
                                            <!-- Dropdown arrow -->
                                            <Path x:Name="Arrow" HorizontalAlignment="Right" Margin="0,0,8,0" VerticalAlignment="Center" Stroke="#F0F0F0" StrokeThickness="2" Data="M 0 0 L 5 5 L 10 0" RenderTransformOrigin="0.5,0.5">
                                                <Path.RenderTransform>
                                                    <RotateTransform Angle="0"/>
                                                </Path.RenderTransform>
                                            </Path>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="HeaderBorder" Property="Background" Value="#4A4A4D"/>
                                            <Setter Property="Cursor" Value="Hand"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter TargetName="HeaderBorder" Property="Background" Value="#4A4A4D"/>
                                            <Setter TargetName="Arrow" Property="RenderTransform">
                                                <Setter.Value>
                                                    <RotateTransform Angle="180"/>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" Value="0.6"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>

                        <!-- Popup -->
                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <!-- Constrain dropdown width to the ComboBox width -->
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="#2B2B2C" BorderThickness="1" BorderBrush="#4A4A4D" CornerRadius="8"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Remove default blue highlight for ComboBox items -->
    <Style TargetType="ComboBoxItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#F0F0F0"/>
        <Setter Property="Padding" Value="4,2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="4">
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#4A4A4D"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#4A4A4D"/>
                <Setter Property="Foreground" Value="#F0F0F0"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>